CREATE TABLE LOGINS(USERNAME VARCHAR(20) NOT NULL PRIMARY KEY, PASSWORD VARCHAR(128) NOT NULL);

CREATE TABLE PEOPLE(USERNAME VARCHAR(20) NOT NULL PRIMARY KEY FOREIGN KEY REFERENCES LOGINS(USERNAME), 
					FIRST_NAME VARCHAR(40),
					LAST_NAME VARCHAR(40),
					ADDRESS VARCHAR(255),
					EMAIL VARCHAR(120) NOT NULL ,
					PHONE VARCHAR(20));

CREATE INDEX EMAIL ON PEOPLE(EMAIL); /*LOOKUPS USING EMAILS SHOULD BE FAST.*/

CREATE TABLE ADMINS(USERNAME VARCHAR(20) NOT NULL PRIMARY KEY FOREIGN KEY REFERENCES LOGINS(USERNAME));

INSERT INTO LOGINS VALUES('ADMIN','ADMIN');
INSERT INTO ADMINS VALUES('ADMIN');
GO


CREATE PROCEDURE REGISTER_USER 
	@USERNAME VARCHAR(20),
	@PASSWORD VARCHAR(128),
	@FIRST_NAME VARCHAR(40),
	@LAST_NAME VARCHAR(40),
	@ADDRESS VARCHAR(255),
	@EMAIL VARCHAR(120),
	@PHONE VARCHAR(20),
	@RESULT VARCHAR(20) OUTPUT
	AS
		BEGIN
			
				INSERT INTO LOGINS VALUES(@USERNAME,@PASSWORD);
				INSERT INTO PEOPLE VALUES(@USERNAME,@FIRST_NAME,@LAST_NAME,@ADDRESS,@EMAIL,@PHONE);
			
		END
GO

CREATE PROCEDURE UPDATE_USER
@FIRST_NAME VARCHAR(40),
@LAST_NAME VARCHAR(40),
@ADDRESS VARCHAR(255),
@EMAIL VARCHAR(120),
@PHONE VARCHAR(20) ,
@USERNAME VARCHAR(20) 
AS
BEGIN
	UPDATE PEOPLE SET USERNAME=@USERNAME,FIRST_NAME=@FIRST_NAME,LAST_NAME=@LAST_NAME,ADDRESS=@ADDRESS,EMAIL=@EMAIL,PHONE=@PHONE 
	WHERE USERNAME=@USERNAME;
END
GO


CREATE PROCEDURE MAKE_ADMIN
		@USERNAME VARCHAR(20)
		AS INSERT INTO ADMINS VALUES(@USERNAME);
GO

CREATE TABLE PERSONALIZATION(
	USERNAME VARCHAR(20) NOT NULL PRIMARY KEY FOREIGN KEY REFERENCES LOGINS(USERNAME),
	THEME VARCHAR(10),
	TAG_WIDTH INT,
	THREAD_WIDTH INT,
	TAG_TOP INT,
	TAG_LEFT INT,
	THREAD_TOP INT,
	THREAD_LEFT INT,
	HEADER_HEIGHT INT,
	LOCALE VARCHAR(20)
	);
GO


CREATE PROCEDURE SAVE_UI_CONFIG
	@USERNAME VARCHAR(20),
	@THEME VARCHAR(10),
	@TAG_WIDTH INT,
	@THREAD_WIDTH INT,
	@TAG_TOP INT,
	@TAG_LEFT INT,
	@THREAD_TOP INT,
	@THREAD_LEFT INT,
	@HEADER_HEIGHT INT,
	@LOCALE VARCHAR(20) 
	AS
	BEGIN
		IF(@USERNAME IN (SELECT USERNAME FROM PERSONALIZATION))
			DELETE FROM PERSONALIZATION WHERE USERNAME=@USERNAME;
		INSERT INTO PERSONALIZATION 
		VALUES(
		@USERNAME,@THEME,@TAG_WIDTH,@THREAD_WIDTH,@TAG_TOP,@TAG_LEFT,@THREAD_TOP,@THREAD_LEFT,@HEADER_HEIGHT,@LOCALE
		);
	END
GO
	 
CREATE PROCEDURE GET_UI_CONFIG
	@USERNAME VARCHAR(20),
	@THEME VARCHAR(10) OUTPUT,
	@TAG_WIDTH INT OUTPUT,
	@THREAD_WIDTH INT OUTPUT,
	@TAG_TOP INT OUTPUT,
	@TAG_LEFT INT OUTPUT,
	@THREAD_TOP INT OUTPUT,
	@THREAD_LEFT INT OUTPUT,
	@HEADER_HEIGHT INT OUTPUT,
	@LOCALE VARCHAR(20) OUTPUT
	AS
	BEGIN
	IF(@USERNAME IN (SELECT USERNAME FROM PERSONALIZATION))
		SELECT
			@THEME=THEME,
			@TAG_WIDTH=TAG_WIDTH,
			@THREAD_WIDTH=THREAD_WIDTH,
			@TAG_TOP=TAG_TOP,
			@TAG_LEFT=TAG_LEFT,
			@THREAD_TOP=THREAD_TOP,
			@THREAD_LEFT=THREAD_LEFT,
			@HEADER_HEIGHT=HEADER_HEIGHT,
			@LOCALE=LOCALE
		FROM PERSONALIZATION WHERE USERNAME=@USERNAME;
	ELSE
		SELECT
			@THEME=NULL,
			@TAG_WIDTH=NULL,
			@THREAD_WIDTH=NULL,
			@TAG_TOP=NULL,
			@TAG_LEFT=NULL,
			@THREAD_TOP=NULL,
			@THREAD_LEFT=NULL,
			@HEADER_HEIGHT=NULL,
			@LOCALE=NULL
		
	END
GO

CREATE PROCEDURE UPDATE_PASSWORD
@PASSWORD VARCHAR(128) ,
@USERNAME VARCHAR(20) 
AS
BEGIN
	UPDATE LOGINS SET PASSWORD=@PASSWORD 
	WHERE USERNAME=@USERNAME
END
GO

CREATE TABLE NAMESPACES(USERNAME VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES LOGINS(USERNAME),
						NAMESPACE_ID VARCHAR(64) NOT NULL, PRIMARY KEY(USERNAME, NAMESPACE_ID));
GO

CREATE PROCEDURE ADD_SYNC_ACCOUNT
@USERNAME VARCHAR(20),
@NAMESPACE_ID VARCHAR(64)  
AS
BEGIN
	INSERT INTO NAMESPACES (USERNAME,NAMESPACE_ID)
	VALUES(@USERNAME,@NAMESPACE_ID)
END
GO

CREATE TABLE CONTACT(CONTACT_ID VARCHAR(20) NOT NULL PRIMARY KEY,
					USERNAME VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES LOGINS(USERNAME),
						FIRST_NAME VARCHAR(40),
						MIDDLE_NAME VARCHAR(40),
						LAST_NAME VARCHAR(40),
						ADDRESS VARCHAR(255),
						EMAIL VARCHAR(120),
						PHONE VARCHAR(20),
						NOTES VARCHAR(255));
CREATE INDEX CONTACTS_BY_USER ON CONTACT(USERNAME);

CREATE TABLE EMAILS(CONTACT_ID VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CONTACT(CONTACT_ID),
					EMAIL VARCHAR(120) NOT NULL, PRIMARY KEY(CONTACT_ID, EMAIL));

CREATE TABLE PHONES(CONTACT_ID VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CONTACT(CONTACT_ID),
					PHONE VARCHAR(120) NOT NULL, PRIMARY KEY(CONTACT_ID, PHONE));
GO

CREATE PROCEDURE INSERT_CONTACT
@CONTACT_ID VARCHAR(20),
@USERNAME VARCHAR(20),
@FIRST_NAME VARCHAR(40),
@MIDDLE_NAME VARCHAR(40),
@LAST_NAME VARCHAR(40),
@ADDRESS VARCHAR(255),
@EMAIL VARCHAR(120),
@PHONE VARCHAR(20),
@NOTES VARCHAR(255)  
AS
BEGIN
	INSERT INTO CONTACT (CONTACT_ID,USERNAME,FIRST_NAME,MIDDLE_NAME,LAST_NAME,ADDRESS,EMAIL,PHONE,NOTES)
	VALUES(@CONTACT_ID,@USERNAME,@FIRST_NAME,@MIDDLE_NAME,@LAST_NAME,@ADDRESS,@EMAIL,@PHONE,@NOTES)
END
GO

CREATE PROCEDURE UPDATE_CONTACT
@CONTACT_ID VARCHAR(20),
@USERNAME VARCHAR(20),
@FIRST_NAME VARCHAR(40),
@MIDDLE_NAME VARCHAR(40),
@LAST_NAME VARCHAR(40),
@ADDRESS VARCHAR(255),
@EMAIL VARCHAR(120),
@PHONE VARCHAR(20),
@NOTES VARCHAR(255)
AS
BEGIN
	UPDATE CONTACT SET USERNAME=@USERNAME,FIRST_NAME=@FIRST_NAME,MIDDLE_NAME=@MIDDLE_NAME,LAST_NAME=@LAST_NAME,ADDRESS=@ADDRESS,EMAIL=@EMAIL,PHONE=@PHONE,NOTES=@NOTES 
	WHERE CONTACT_ID=@CONTACT_ID
END
GO



CREATE PROCEDURE ADD_SECONDARY_EMAILS
@CONTACT_ID VARCHAR(20),
@EMAIL VARCHAR(120)  
AS
BEGIN
	INSERT INTO EMAILS (CONTACT_ID,EMAIL)
	VALUES(@CONTACT_ID,@EMAIL)
END
GO


CREATE PROCEDURE CHANGE_SECONDARY_EMAILS
@EMAIL VARCHAR(120) ,
@ORIG_CONTACT_ID VARCHAR(20),
@ORIG_EMAIL VARCHAR(120) 
AS
BEGIN
	UPDATE EMAILS SET EMAIL=@EMAIL 
	WHERE CONTACT_ID=@ORIG_CONTACT_ID AND EMAIL=@ORIG_EMAIL
END
GO


CREATE PROCEDURE ADD_SECONDARY__PHONES
@CONTACT_ID VARCHAR(20),
@PHONE VARCHAR(120)  
AS
BEGIN
	INSERT INTO PHONES (CONTACT_ID,PHONE)
	VALUES(@CONTACT_ID,@PHONE)
END
GO


 CREATE PROCEDURE UPDATE_SECONDARY__PHONES
@PHONE VARCHAR(120) ,
@ORIG_CONTACT_ID VARCHAR(20),
@ORIG_PHONE VARCHAR(120) 
AS
BEGIN
	UPDATE PHONES SET PHONE=@PHONE 
	WHERE CONTACT_ID=@ORIG_CONTACT_ID AND PHONE=@ORIG_PHONE
END
GO

CREATE TABLE CONTACT_TAG(CONTACT_ID VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CONTACT(CONTACT_ID),
							TAG VARCHAR(64) NOT NULL, PRIMARY KEY(CONTACT_ID, TAG));
CREATE INDEX CONT_TAG_IND ON CONTACT_TAG(TAG);
GO

CREATE PROCEDURE ADD_CONTACT_TAG
@CONTACT_ID VARCHAR(20),
@TAG VARCHAR(64)  
AS
BEGIN
	INSERT INTO CONTACT_TAG (CONTACT_ID,TAG)
	VALUES(@CONTACT_ID,@TAG)
END
GO

CREATE PROCEDURE UPDATE_CONTACT_TAG
@CONTACT_ID VARCHAR(20),
@TAG VARCHAR(64) ,
@ORIG_CONTACT_ID VARCHAR(20),
@ORIG_TAG VARCHAR(64) 
AS
BEGIN
	UPDATE CONTACT_TAG SET CONTACT_ID=@CONTACT_ID,TAG=@TAG 
	WHERE CONTACT_ID=@ORIG_CONTACT_ID AND TAG=@ORIG_TAG
END
GO

CREATE PROCEDURE REMOVE_TAG
@CONTACT_ID VARCHAR(20),
@TAG VARCHAR(64)
AS 
BEGIN
	DELETE FROM CONTACT_TAG WHERE CONTACT_ID=@CONTACT_ID AND TAG=@TAG;
END
GO


CREATE PROCEDURE DELETE_TAG
@TAG VARCHAR(64)
AS 
BEGIN
	DELETE FROM CONTACT_TAG WHERE TAG=@TAG;
END
GO

CREATE PROCEDURE REMOVE_SECONDARY_EMAIL
@CONTACT_ID VARCHAR(20),
@EMAIL VARCHAR(120)
AS
BEGIN
	DELETE FROM EMAILS WHERE CONTACT_ID=@CONTACT_ID AND EMAIL=@EMAIL;
END
GO

CREATE PROCEDURE REMOVE_SECONDARY_PHONE
@CONTACT_ID VARCHAR(20),
@PHONE VARCHAR(120)
AS
BEGIN
	DELETE FROM PHONES WHERE CONTACT_ID=@CONTACT_ID AND PHONE=@PHONE;
END
GO


CREATE PROCEDURE DELETE_CONTACT
@CONTACT_ID VARCHAR(20)
AS BEGIN
	DELETE FROM CONTACT_TAG WHERE CONTACT_ID=@CONTACT_ID;
	DELETE FROM PHONES  WHERE CONTACT_ID=@CONTACT_ID;
	DELETE FROM EMAILS WHERE CONTACT_ID=@CONTACT_ID;
	DELETE FROM CONTACT  WHERE CONTACT_ID=@CONTACT_ID;
END
GO

CREATE PROCEDURE CLEAR_PERSONALIZATION
@USERNAME VARCHAR(20)
AS
BEGIN
	DELETE FROM PERSONALIZATION WHERE USERNAME=@USERNAME;
END
GO

--http://extremeexperts.com/sql/articles/IterateTSQLResult.aspx




CREATE PROCEDURE DELETE_USER
@USER_NAME VARCHAR(20)
AS
BEGIN
	EXEC CLEAR_PERSONALIZATION @USER_NAME;

	DECLARE @CONT_ID VARCHAR(20);
	SET ROWCOUNT 0;
	SELECT CONTACT_ID INTO #TEMP_C FROM CONTACT WHERE USERNAME=@USER_NAME;
	SET ROWCOUNT 1;
	SELECT @CONT_ID=CONTACT_ID FROM #TEMP_C;

	WHILE @@ROWCOUNT<>0
		BEGIN
			EXEC DELETE_CONTACT @CONT_ID
		END
	SET ROWCOUNT 0

	DROP TABLE #TEMP_C;

	DECLARE @NS_ID VARCHAR(64);
	SET ROWCOUNT 0;
	SELECT NAMESPACE_ID INTO #TEMP_N FROM NAMESPACES WHERE USERNAME=@USER_NAME;
	SET ROWCOUNT 1;
	SELECT @NS_ID=NAMESPACE_ID FROM #TEMP_N;

	WHILE @@ROWCOUNT<>0
		BEGIN
			DELETE FROM NAMESPACES WHERE NAMESPACE_ID=@NS_ID;
		END
	SET ROWCOUNT 0

	DROP TABLE #TEMP_N;

	DELETE FROM PEOPLE WHERE USERNAME=@USER_NAME;
	DELETE FROM LOGINS WHERE USERNAME=@USER_NAME;
END
GO

CREATE PROCEDURE REMOVE_NS
@USERNAME VARCHAR(20),
@NAMESPACE_ID VARCHAR(64)
AS
BEGIN
	DELETE FROM NAMESPACES WHERE NAMESPACE_ID=@NAMESPACE_ID AND USERNAME= @USERNAME;
END
GO

CREATE PROCEDURE ADD_NS
@USERNAME VARCHAR(20),
@NAMESPACE_ID VARCHAR(64)
AS
BEGIN
	INSERT INTO NAMESPACES VALUES(@USERNAME,@NAMESPACE_ID);
END
GO
		